- name: Remove {{ container_name }} container
  docker_container:
    name: "{{ container_name }}"
    state: absent
  ignore_errors: yes

- name: Run {{ container_name }} container
  docker_container:
    name: "{{ container_name }}"
    restart_policy: always
    # network_mode: host
    hostname: "{{ ansible_hostname }}"
    ports: "{{ container_ports }}"
    # log_driver: json-file
    # log_options:
    #   max-size: 20m
    #   max-file: 1
    memory: 512m
    image: "{{ image_name }}"
    state: started
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock
  register: container_output

# - name: Running the container
#   docker_container:
#     name: hello_world
#     image: vad1mo/hello-world-rest
#     ports:
#       - "80:5050"
#     # state: started
#   

# - debug: var=hello_world_output
#   # when: playbook_debu

- name: Save status
  set_fact:
    container_is_running: "{{ container_output.ansible_facts.docker_container.State.Running }}"

- fail:
    msg: "The service is not running"
  when: not container_is_running

- name: Get container IP
  set_fact:
    container_ip: "{{ container_output.ansible_facts.docker_container.NetworkSettings.IPAddress }}"

- name: Check container
  wait_for:
    host: "{{ container_ip }}"
    port: "{{ poll_port }}"
    timeout: "{{ poll_timeout }}"

